[2015-08-05 16:01:41,080] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:01:41,081] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:01:41,081] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:01:41,081] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:01:41,081] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:01:41,081] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:06:41,074] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:06:41,076] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:06:41,076] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:06:41,076] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:06:41,076] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:06:41,076] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:11:41,066] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:11:41,067] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:11:41,067] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:11:41,067] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:11:41,067] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:11:41,067] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:16:41,058] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:16:41,059] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:16:41,059] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:16:41,059] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:16:41,059] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:16:41,059] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:21:41,053] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:21:41,054] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:21:41,054] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:21:41,054] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:21:41,054] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:21:41,054] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:26:41,051] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:26:41,051] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:26:41,051] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:26:41,051] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:26:41,052] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:26:41,052] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:48:24,928] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2015-08-05 16:48:24,929] INFO [delete-topics-thread-0], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-05 16:48:24,929] INFO [delete-topics-thread-0], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-05 16:48:24,929] INFO [delete-topics-thread-0], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-05 16:48:24,929] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:24,929] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2015-08-05 16:48:24,930] INFO [Controller-0-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2015-08-05 16:48:24,930] INFO [Controller-0-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2015-08-05 16:48:24,930] INFO [Controller-0-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2015-08-05 16:48:24,930] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2015-08-05 16:48:24,930] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2015-08-05 16:48:24,930] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2015-08-05 16:48:24,932] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2015-08-05 16:48:24,932] INFO [Controller 0]: Initialized controller epoch to 14 and zk version 13 (kafka.controller.KafkaController)
[2015-08-05 16:48:24,933] INFO [Controller 0]: Controller 0 incremented epoch to 15 (kafka.controller.KafkaController)
[2015-08-05 16:48:24,960] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2015-08-05 16:48:24,960] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2015-08-05 16:48:24,960] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: List of topics ineligible for deletion: t4,_schemas,t3,t6,t2,t7,t1 (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Controller 0]: Current list of topics in the cluster: Set(t4, _schemas, t3, t6, t2, t7, t1) (kafka.controller.KafkaController)
[2015-08-05 16:48:24,961] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=t3,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=t2,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=t6,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t1,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=t2,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=_schemas,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t2,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=t1,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=t7,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t3,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t4,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=t1,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=t3,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=_schemas,Partition=0,Replica=2] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-08-05 16:48:24,964] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:24,967] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:24,977] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:24,980] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:24,982] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:24,998] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t7,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,001] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,004] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,007] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,011] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [_schemas,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,014] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,016] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t6,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,019] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t4,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,019] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([t2,1] -> OfflinePartition, [t1,2] -> OfflinePartition, [t3,1] -> OfflinePartition, [t1,0] -> OfflinePartition, [t2,2] -> OfflinePartition, [t7,0] -> OfflinePartition, [t2,0] -> OfflinePartition, [t1,1] -> OfflinePartition, [t3,2] -> OfflinePartition, [_schemas,0] -> OfflinePartition, [t3,0] -> OfflinePartition, [t6,0] -> OfflinePartition, [t4,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,021] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 15 (kafka.controller.KafkaController)
[2015-08-05 16:48:25,021] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2015-08-05 16:48:25,021] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,022] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2015-08-05 16:48:25,022] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-05 16:48:25,023] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-08-05 16:48:25,033] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-05 16:48:25,036] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-05 16:48:25,036] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2015-08-05 16:48:25,036] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:fufuka,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-05 16:48:25,036] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2015-08-05 16:48:25,036] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-08-05 16:48:25,037] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=t3,Partition=0,Replica=0],[Topic=t3,Partition=2,Replica=0],[Topic=t6,Partition=0,Replica=0],[Topic=_schemas,Partition=0,Replica=0],[Topic=t1,Partition=1,Replica=0],[Topic=t2,Partition=2,Replica=0],[Topic=t2,Partition=0,Replica=0],[Topic=t7,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-08-05 16:48:25,037] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 15 fails to send request Name:UpdateMetadataRequest;Version:0;Controller:0;ControllerEpoch:15;CorrelationId:39;ClientId:id_0-host_null-port_9092;AliveBrokers:id:0,host:fufuka,port:9092;PartitionState:[t1,1] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t3,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[_schemas,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14),ReplicationFactor:2),AllReplicas:2,0),[t7,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t4,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t6,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,2] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t2,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:fufuka,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:132)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2015-08-05 16:48:25,038] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:fufuka,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-05 16:48:25,041] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,044] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,047] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,050] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,051] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,052] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":10,"isr":[0]} for offline partition [t2,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,053] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [_schemas,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,054] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t7,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,054] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":10,"isr":[0]} for offline partition [t7,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,055] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [_schemas,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,057] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,057] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":10,"isr":[0]} for offline partition [t2,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,058] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [_schemas,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,059] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,059] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":10,"isr":[0]} for offline partition [t1,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,060] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [_schemas,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,061] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,061] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":10,"isr":[0]} for offline partition [t3,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,062] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,065] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [_schemas,0]. Pick the leader from the alive assigned replicas: 0 (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,066] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [_schemas,0]. Elect leader 0 from live brokers 0. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,066] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":4,"isr":[0]} for offline partition [_schemas,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,066] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,068] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,068] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":10,"isr":[0]} for offline partition [t3,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,069] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,071] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t6,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,071] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":10,"isr":[0]} for offline partition [t6,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,072] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:25,074] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t4,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:25,076] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-08-05 16:48:25,076] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children t4,t6,t7,_schemas,t1,t2,t3 (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-08-05 16:48:25,077] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-08-05 16:48:25,079] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[2,0]}} for path /brokers/topics/_schemas (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-05 16:48:25,082] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[2]}} for path /brokers/topics/t4 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-05 16:48:25,083] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"2":[0],"1":[2],"0":[0]}} for path /brokers/topics/t3 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-05 16:48:25,085] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"2":[0],"1":[2],"0":[0]}} for path /brokers/topics/t2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-05 16:48:25,086] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"2":[2],"1":[0],"0":[2]}} for path /brokers/topics/t1 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-05 16:48:25,088] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/t7 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-05 16:48:25,089] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/t6 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-05 16:48:25,091] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-05 16:48:25,092] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-05 16:48:25,343] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 15 fails to send request Name:UpdateMetadataRequest;Version:0;Controller:0;ControllerEpoch:15;CorrelationId:39;ClientId:id_0-host_null-port_9092;AliveBrokers:id:0,host:fufuka,port:9092;PartitionState:[t1,1] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t3,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[_schemas,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14),ReplicationFactor:2),AllReplicas:2,0),[t7,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t4,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t6,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,2] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t2,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:fufuka,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:132)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2015-08-05 16:48:25,343] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:fufuka,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-05 16:48:25,649] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 15 fails to send request Name:UpdateMetadataRequest;Version:0;Controller:0;ControllerEpoch:15;CorrelationId:39;ClientId:id_0-host_null-port_9092;AliveBrokers:id:0,host:fufuka,port:9092;PartitionState:[t1,1] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t3,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[_schemas,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14),ReplicationFactor:2),AllReplicas:2,0),[t7,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t4,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t6,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,2] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t2,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:fufuka,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:132)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2015-08-05 16:48:25,649] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:fufuka,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-05 16:48:25,952] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 15 fails to send request Name:UpdateMetadataRequest;Version:0;Controller:0;ControllerEpoch:15;CorrelationId:39;ClientId:id_0-host_null-port_9092;AliveBrokers:id:0,host:fufuka,port:9092;PartitionState:[t1,1] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t3,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,1] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t3,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[_schemas,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:14),ReplicationFactor:2),AllReplicas:2,0),[t7,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t4,0] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t6,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t1,2] -> (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:2),[t2,0] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0),[t2,2] -> (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:9,ControllerEpoch:14),ReplicationFactor:1),AllReplicas:0) to broker id:0,host:fufuka,port:9092. Reconnecting to broker. (kafka.controller.RequestSendThread)
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:132)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:131)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2015-08-05 16:48:25,952] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:fufuka,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-05 16:48:26,113] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-05 16:48:26,118] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-05 16:48:26,118] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2015-08-05 16:48:26,118] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to id:2,host:jketos-macbook-pro.local,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-05 16:48:26,118] INFO [Controller 0]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2015-08-05 16:48:26,119] INFO [Controller-0-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-08-05 16:48:26,119] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=t3,Partition=1,Replica=2],[Topic=t2,Partition=1,Replica=2],[Topic=t4,Partition=0,Replica=2],[Topic=t1,Partition=2,Replica=2],[Topic=_schemas,Partition=0,Replica=2],[Topic=t1,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2015-08-05 16:48:26,122] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,1]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,122] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":9,"isr":[2]} for offline partition [t2,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,123] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:26,125] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,2]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,125] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":9,"isr":[2]} for offline partition [t1,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,126] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:26,127] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,1]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,127] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":9,"isr":[2]} for offline partition [t3,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,128] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:26,129] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,0]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,129] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":9,"isr":[2]} for offline partition [t1,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,129] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:8,ControllerEpoch:14)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:26,131] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t4,0]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,131] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":9,"isr":[2]} for offline partition [t4,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-05 16:48:26,132] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:30,026] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:48:30,027] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:48:30,027] DEBUG [Controller 0]: topics not in preferred replica Map([_schemas,0] -> List(2, 0)) (kafka.controller.KafkaController)
[2015-08-05 16:48:30,027] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.166667 (kafka.controller.KafkaController)
[2015-08-05 16:48:30,027] INFO [Controller 0]: Starting preferred replica leader election for partitions [_schemas,0] (kafka.controller.KafkaController)
[2015-08-05 16:48:30,027] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [_schemas,0] (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:30,029] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [_schemas,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2015-08-05 16:48:30,031] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t3,1] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t7,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [_schemas,0] -> (Leader:2,ISR:0,2,LeaderEpoch:5,ControllerEpoch:15), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t6,0] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:15), [t4,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:15)) (kafka.controller.PartitionStateMachine)
[2015-08-05 16:48:30,031] INFO [Controller 0]: Partition [_schemas,0] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2015-08-05 16:48:30,031] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:48:30,031] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:53:30,016] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:53:30,017] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:53:30,017] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:53:30,017] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:53:30,017] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:53:30,017] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:58:30,012] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-05 16:58:30,012] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t3,1] -> List(2), [_schemas,0] -> List(2, 0), [t4,0] -> List(2)), 0 -> Map([t7,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0), [t6,0] -> List(0))) (kafka.controller.KafkaController)
[2015-08-05 16:58:30,013] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:58:30,013] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-05 16:58:30,013] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-05 16:58:30,013] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
