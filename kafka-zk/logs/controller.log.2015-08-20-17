[2015-08-21 11:41:54,676] INFO [SessionExpirationListener on 1], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2015-08-21 11:41:54,681] INFO [delete-topics-thread-1], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-21 11:41:54,681] INFO [delete-topics-thread-1], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-21 11:41:54,681] INFO [delete-topics-thread-1], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-21 11:41:54,684] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,684] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2015-08-21 11:41:54,684] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,685] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,685] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,685] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,687] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,687] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,706] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2015-08-21 11:41:54,707] INFO [Controller 1]: Initialized controller epoch to 59 and zk version 58 (kafka.controller.KafkaController)
[2015-08-21 11:41:54,708] INFO [Controller 1]: Controller 1 incremented epoch to 60 (kafka.controller.KafkaController)
[2015-08-21 11:41:54,733] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2015-08-21 11:41:54,733] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2015-08-21 11:41:54,733] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: List of topics ineligible for deletion: t4,t3,t6,t2,t7,t1 (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-08-21 11:41:54,734] INFO [Controller 1]: Current list of topics in the cluster: Set(t4, t3, t6, t2, t7, t1) (kafka.controller.KafkaController)
[2015-08-21 11:41:54,735] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=t2,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=t1,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=t7,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=t4,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=t3,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=t6,Partition=0,Replica=1] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-08-21 11:41:54,739] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,742] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,746] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t7,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,750] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,753] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t6,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,757] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t4,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,757] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([t1,0] -> OfflinePartition, [t2,0] -> OfflinePartition, [t7,0] -> OfflinePartition, [t3,0] -> OfflinePartition, [t6,0] -> OfflinePartition, [t4,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,759] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 60 (kafka.controller.KafkaController)
[2015-08-21 11:41:54,759] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2015-08-21 11:41:54,759] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,759] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2015-08-21 11:41:54,760] INFO [delete-topics-thread-1], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-08-21 11:41:54,760] DEBUG [Topic Deletion Manager 1], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-08-21 11:41:54,881] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-21 11:41:54,889] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 1,2, deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-21 11:41:54,890] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2015-08-21 11:41:54,890] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to id:1,host:jketos-macbook-pro.local,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,890] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2015-08-21 11:41:54,890] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,891] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to id:2,host:jketos-macbook-pro.local,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,891] INFO [Controller 1]: New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2015-08-21 11:41:54,891] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-08-21 11:41:54,895] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=t4,Partition=0,Replica=1],[Topic=t7,Partition=0,Replica=1],[Topic=t6,Partition=0,Replica=1],[Topic=t2,Partition=0,Replica=1],[Topic=t3,Partition=0,Replica=2],[Topic=t1,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2015-08-21 11:41:54,905] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,0]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,905] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":35,"isr":[2]} for offline partition [t1,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,906] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([t1,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t2,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59), [t7,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:59), [t6,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59), [t4,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59)) (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,908] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,908] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":48,"isr":[1]} for offline partition [t2,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,909] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([t1,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t2,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t7,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:59), [t6,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59), [t4,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59)) (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,913] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t7,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,913] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":48,"isr":[1]} for offline partition [t7,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,914] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([t1,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t2,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t7,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:59), [t6,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59), [t4,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59)) (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,916] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,0]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,916] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":35,"isr":[2]} for offline partition [t3,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,917] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([t1,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t2,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t7,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t6,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59), [t4,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59)) (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,919] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t6,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,920] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":48,"isr":[1]} for offline partition [t6,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,920] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([t1,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t2,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t7,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t6,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t4,0] -> (Leader:1,ISR:1,LeaderEpoch:47,ControllerEpoch:59)) (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,922] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t4,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,923] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":48,"isr":[1]} for offline partition [t4,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-08-21 11:41:54,923] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([t1,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t2,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t7,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:60), [t6,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60), [t4,0] -> (Leader:1,ISR:1,LeaderEpoch:48,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2015-08-21 11:41:54,927] DEBUG [DeleteTopicsListener on 1]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-08-21 11:41:54,928] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children t4,t6,t7,t1,t2,t3 (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-08-21 11:41:54,928] INFO [TopicChangeListener on Controller 1]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-08-21 11:41:54,932] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[1]}} for path /brokers/topics/t4 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-21 11:41:54,935] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[2]}} for path /brokers/topics/t3 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-21 11:41:54,937] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[1]}} for path /brokers/topics/t2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-21 11:41:54,938] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[2]}} for path /brokers/topics/t1 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-21 11:41:54,940] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[1]}} for path /brokers/topics/t7 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-21 11:41:54,942] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[1]}} for path /brokers/topics/t6 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-08-21 11:41:54,944] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-21 11:41:54,948] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: , all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-08-21 11:41:59,763] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-21 11:41:59,764] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([t1,0] -> List(2), [t3,0] -> List(2)), 1 -> Map([t7,0] -> List(1), [t2,0] -> List(1), [t6,0] -> List(1), [t4,0] -> List(1))) (kafka.controller.KafkaController)
[2015-08-21 11:41:59,764] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:41:59,764] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-21 11:41:59,764] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:41:59,764] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2015-08-21 11:46:59,759] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-21 11:46:59,760] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([t1,0] -> List(2), [t3,0] -> List(2)), 1 -> Map([t7,0] -> List(1), [t2,0] -> List(1), [t6,0] -> List(1), [t4,0] -> List(1))) (kafka.controller.KafkaController)
[2015-08-21 11:46:59,760] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:46:59,760] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-21 11:46:59,760] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:46:59,760] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2015-08-21 11:51:59,751] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-21 11:51:59,751] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([t1,0] -> List(2), [t3,0] -> List(2)), 1 -> Map([t7,0] -> List(1), [t2,0] -> List(1), [t6,0] -> List(1), [t4,0] -> List(1))) (kafka.controller.KafkaController)
[2015-08-21 11:51:59,751] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:51:59,751] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-21 11:51:59,751] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:51:59,751] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2015-08-21 11:56:59,744] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-08-21 11:56:59,745] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([t1,0] -> List(2), [t3,0] -> List(2)), 1 -> Map([t7,0] -> List(1), [t2,0] -> List(1), [t6,0] -> List(1), [t4,0] -> List(1))) (kafka.controller.KafkaController)
[2015-08-21 11:56:59,745] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:56:59,745] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-08-21 11:56:59,745] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-08-21 11:56:59,745] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
