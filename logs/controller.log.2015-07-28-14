[2015-07-28 15:33:10,101] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2015-07-28 15:33:10,748] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2015-07-28 15:33:10,750] INFO [Controller 2]: Initialized controller epoch to 165 and zk version 164 (kafka.controller.KafkaController)
[2015-07-28 15:33:10,889] INFO [Controller 2]: Controller 2 incremented epoch to 166 (kafka.controller.KafkaController)
[2015-07-28 15:33:11,159] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2015-07-28 15:33:11,174] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to id:2,host:10.15.104.47,port:9093 for sending state change requests (kafka.controller.RequestSendThread)
[2015-07-28 15:33:11,176] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-07-28 15:33:11,179] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2015-07-28 15:33:11,179] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2015-07-28 15:33:11,180] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2015-07-28 15:33:11,183] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2015-07-28 15:33:11,183] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2015-07-28 15:33:11,184] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2015-07-28 15:33:11,189] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2015-07-28 15:33:11,189] INFO [Controller 2]: List of topics ineligible for deletion: t3,t2,t1,t4 (kafka.controller.KafkaController)
[2015-07-28 15:33:11,192] INFO [Controller 2]: Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2015-07-28 15:33:11,193] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-07-28 15:33:11,193] INFO [Controller 2]: Current list of topics in the cluster: Set(t4, t3, t6, t2, t7, t1) (kafka.controller.KafkaController)
[2015-07-28 15:33:11,200] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=t6,Partition=0,Replica=2],[Topic=t7,Partition=0,Replica=2],[Topic=t3,Partition=2,Replica=2],[Topic=t2,Partition=1,Replica=2],[Topic=t3,Partition=0,Replica=2],[Topic=t1,Partition=2,Replica=2],[Topic=t1,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2015-07-28 15:33:11,226] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=t2,Partition=1,Replica=2] -> OnlineReplica, [Topic=t2,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t1,Partition=0,Replica=2] -> OnlineReplica, [Topic=t3,Partition=2,Replica=2] -> OnlineReplica, [Topic=t2,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=t1,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=t3,Partition=0,Replica=2] -> OnlineReplica, [Topic=t4,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t1,Partition=2,Replica=2] -> OnlineReplica, [Topic=t6,Partition=0,Replica=2] -> OnlineReplica, [Topic=t7,Partition=0,Replica=2] -> OnlineReplica, [Topic=t3,Partition=1,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-07-28 15:33:11,249] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,278] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,284] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,290] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,296] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t4,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,298] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([t2,1] -> OnlinePartition, [t1,2] -> OnlinePartition, [t3,1] -> OfflinePartition, [t1,0] -> OnlinePartition, [t2,2] -> OfflinePartition, [t2,0] -> OfflinePartition, [t7,0] -> OnlinePartition, [t1,1] -> OfflinePartition, [t3,2] -> OnlinePartition, [t3,0] -> OnlinePartition, [t6,0] -> OnlinePartition, [t4,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2015-07-28 15:33:11,301] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 166 (kafka.controller.KafkaController)
[2015-07-28 15:33:11,303] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2015-07-28 15:33:11,303] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-07-28 15:33:11,309] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2015-07-28 15:33:11,311] INFO [delete-topics-thread-2], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-07-28 15:33:11,312] DEBUG [Topic Deletion Manager 2], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2015-07-28 15:33:11,316] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 0,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-07-28 15:33:11,336] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 0, deleted brokers: , all live brokers: 0,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-07-28 15:33:11,337] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2015-07-28 15:33:11,338] INFO [Controller-2-to-broker-0-send-thread], Controller 2 connected to id:0,host:10.15.104.47,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-07-28 15:33:11,338] INFO [Controller-2-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-07-28 15:33:11,342] INFO [Controller 2]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2015-07-28 15:33:11,350] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=t3,Partition=1,Replica=0],[Topic=t1,Partition=1,Replica=0],[Topic=t2,Partition=2,Replica=0],[Topic=t4,Partition=0,Replica=0],[Topic=t2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-07-28 15:33:11,372] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,373] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [t3,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,382] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165), [t7,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165), [t3,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t6,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t4,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165)) (kafka.controller.PartitionStateMachine)
[2015-07-28 15:33:11,388] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,388] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [t2,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,389] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165), [t7,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165), [t3,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t6,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t4,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165)) (kafka.controller.PartitionStateMachine)
[2015-07-28 15:33:11,392] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,392] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [t2,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,393] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t7,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165), [t3,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t6,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t4,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165)) (kafka.controller.PartitionStateMachine)
[2015-07-28 15:33:11,398] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,398] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [t1,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,399] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t7,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t3,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t6,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t4,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:165)) (kafka.controller.PartitionStateMachine)
[2015-07-28 15:33:11,402] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t4,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,402] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [t4,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-28 15:33:11,404] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t1,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t7,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166), [t3,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t3,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t6,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:165), [t4,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:166)) (kafka.controller.PartitionStateMachine)
[2015-07-28 15:33:16,317] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-28 15:33:16,320] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t7,0] -> List(2), [t3,2] -> List(2), [t3,0] -> List(2), [t6,0] -> List(2)), 0 -> Map([t3,1] -> List(0), [t2,2] -> List(0), [t2,0] -> List(0), [t1,1] -> List(0), [t4,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-28 15:33:16,322] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:33:16,323] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:33:16,324] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:33:16,324] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:38:16,305] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-28 15:38:16,305] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t7,0] -> List(2), [t3,2] -> List(2), [t3,0] -> List(2), [t6,0] -> List(2)), 0 -> Map([t3,1] -> List(0), [t2,2] -> List(0), [t2,0] -> List(0), [t1,1] -> List(0), [t4,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-28 15:38:16,306] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:38:16,306] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:38:16,306] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:38:16,306] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:43:16,303] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-28 15:43:16,304] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t7,0] -> List(2), [t3,2] -> List(2), [t3,0] -> List(2), [t6,0] -> List(2)), 0 -> Map([t3,1] -> List(0), [t2,2] -> List(0), [t2,0] -> List(0), [t1,1] -> List(0), [t4,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-28 15:43:16,305] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:43:16,305] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:43:16,305] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:43:16,305] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:48:16,295] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-28 15:48:16,296] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t7,0] -> List(2), [t3,2] -> List(2), [t3,0] -> List(2), [t6,0] -> List(2)), 0 -> Map([t3,1] -> List(0), [t2,2] -> List(0), [t2,0] -> List(0), [t1,1] -> List(0), [t4,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-28 15:48:16,296] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:48:16,296] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:48:16,296] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:48:16,296] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:53:16,287] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-28 15:53:16,288] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t7,0] -> List(2), [t3,2] -> List(2), [t3,0] -> List(2), [t6,0] -> List(2)), 0 -> Map([t3,1] -> List(0), [t2,2] -> List(0), [t2,0] -> List(0), [t1,1] -> List(0), [t4,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-28 15:53:16,288] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:53:16,288] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:53:16,288] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:53:16,289] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:58:16,285] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-28 15:58:16,286] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([t2,1] -> List(2), [t1,2] -> List(2), [t1,0] -> List(2), [t7,0] -> List(2), [t3,2] -> List(2), [t3,0] -> List(2), [t6,0] -> List(2)), 0 -> Map([t3,1] -> List(0), [t2,2] -> List(0), [t2,0] -> List(0), [t1,1] -> List(0), [t4,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-28 15:58:16,287] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:58:16,287] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2015-07-28 15:58:16,287] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-28 15:58:16,287] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
