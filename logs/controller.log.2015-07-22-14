[2015-07-22 14:15:13,375] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2015-07-22 14:15:13,377] INFO [delete-topics-thread-0], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-07-22 14:15:13,378] INFO [delete-topics-thread-0], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-07-22 14:15:13,380] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:13,381] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2015-07-22 14:15:13,382] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2015-07-22 14:15:13,383] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2015-07-22 14:15:13,383] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2015-07-22 14:15:13,571] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2015-07-22 14:15:13,572] INFO [Controller 0]: Initialized controller epoch to 129 and zk version 128 (kafka.controller.KafkaController)
[2015-07-22 14:15:13,694] INFO [Controller 0]: Controller 0 incremented epoch to 130 (kafka.controller.KafkaController)
[2015-07-22 14:15:13,757] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2015-07-22 14:15:13,757] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2015-07-22 14:15:13,757] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2015-07-22 14:15:13,757] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2015-07-22 14:15:13,758] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2015-07-22 14:15:13,758] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2015-07-22 14:15:13,761] INFO [Controller 0]: List of topics to be deleted: group-test-topic (kafka.controller.KafkaController)
[2015-07-22 14:15:13,761] INFO [Controller 0]: List of topics ineligible for deletion: t2,t1,t3 (kafka.controller.KafkaController)
[2015-07-22 14:15:13,761] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-07-22 14:15:13,761] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2015-07-22 14:15:13,761] INFO [Controller 0]: Current list of topics in the cluster: Set(t1, t2, t3) (kafka.controller.KafkaController)
[2015-07-22 14:15:13,762] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=t1,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t1,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=t2,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t2,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=t1,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=t3,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=t3,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=t2,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=t3,Partition=1,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2015-07-22 14:15:13,771] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,779] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,786] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,795] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,800] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,809] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t2,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,815] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t1,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,821] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,827] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [t3,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:13,828] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([t2,1] -> OfflinePartition, [t1,2] -> OfflinePartition, [t1,0] -> OfflinePartition, [t3,1] -> OfflinePartition, [t2,2] -> OfflinePartition, [t2,0] -> OfflinePartition, [t1,1] -> OfflinePartition, [t3,2] -> OfflinePartition, [t3,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:13,829] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 130 (kafka.controller.KafkaController)
[2015-07-22 14:15:13,829] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2015-07-22 14:15:13,829] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:13,898] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2015-07-22 14:15:13,899] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-07-22 14:15:13,899] INFO [delete-topics-thread-0], Handling deletion for topics group-test-topic (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-07-22 14:15:13,899] DEBUG [Replica state machine on controller 0]: Are all replicas for topic group-test-topic deleted Map() (kafka.controller.ReplicaStateMachine)
[2015-07-22 14:15:13,900] ERROR [delete-topics-thread-0], Error due to  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
java.util.NoSuchElementException: key not found: group-test-topic
	at scala.collection.MapLike$class.default(MapLike.scala:228)
	at scala.collection.AbstractMap.default(Map.scala:59)
	at scala.collection.mutable.HashMap.apply(HashMap.scala:65)
	at kafka.controller.PartitionStateMachine.deregisterPartitionChangeListener(PartitionStateMachine.scala:399)
	at kafka.controller.TopicDeletionManager.kafka$controller$TopicDeletionManager$$completeDeleteTopic(TopicDeletionManager.scala:276)
	at kafka.controller.TopicDeletionManager$DeleteTopicsThread$$anonfun$doWork$1$$anonfun$apply$mcV$sp$4.apply(TopicDeletionManager.scala:400)
	at kafka.controller.TopicDeletionManager$DeleteTopicsThread$$anonfun$doWork$1$$anonfun$apply$mcV$sp$4.apply(TopicDeletionManager.scala:396)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:79)
	at kafka.controller.TopicDeletionManager$DeleteTopicsThread$$anonfun$doWork$1.apply$mcV$sp(TopicDeletionManager.scala:396)
	at kafka.controller.TopicDeletionManager$DeleteTopicsThread$$anonfun$doWork$1.apply(TopicDeletionManager.scala:390)
	at kafka.controller.TopicDeletionManager$DeleteTopicsThread$$anonfun$doWork$1.apply(TopicDeletionManager.scala:390)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.TopicDeletionManager$DeleteTopicsThread.doWork(TopicDeletionManager.scala:390)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:60)
[2015-07-22 14:15:13,900] INFO [delete-topics-thread-0], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2015-07-22 14:15:14,010] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-07-22 14:15:14,017] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-07-22 14:15:14,017] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2015-07-22 14:15:14,018] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to id:0,host:10.15.104.47,port:9092 for sending state change requests (kafka.controller.RequestSendThread)
[2015-07-22 14:15:14,018] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2015-07-22 14:15:14,018] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2015-07-22 14:15:14,019] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=t3,Partition=0,Replica=0],[Topic=t3,Partition=2,Replica=0],[Topic=t1,Partition=2,Replica=0],[Topic=t3,Partition=1,Replica=0],[Topic=t2,Partition=1,Replica=0],[Topic=t1,Partition=1,Replica=0],[Topic=t2,Partition=2,Replica=0],[Topic=t1,Partition=0,Replica=0],[Topic=t2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2015-07-22 14:15:14,027] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,028] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t2,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,032] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,035] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,035] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t1,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,037] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,038] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,039] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t1,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,040] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,043] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,043] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t3,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,045] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,048] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,048] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t2,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,050] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,053] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t2,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,054] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t2,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,055] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,058] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t1,1]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,058] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t1,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,060] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,064] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,2]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,064] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t3,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,066] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:129)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,069] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [t3,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,069] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [t3,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2015-07-22 14:15:14,071] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([t2,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t2,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t1,1] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,2] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130), [t3,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:130)) (kafka.controller.PartitionStateMachine)
[2015-07-22 14:15:14,075] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics group-test-topic to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-07-22 14:15:14,076] WARN [DeleteTopicsListener on 0]: Ignoring request to delete non-existing topics group-test-topic (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-07-22 14:15:14,082] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children t1,t2,t3 (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-07-22 14:15:14,082] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2015-07-22 14:15:14,091] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[0],"2":[0],"0":[0]}} for path /brokers/topics/t3 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-07-22 14:15:14,096] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[0],"2":[0],"0":[0]}} for path /brokers/topics/t2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-07-22 14:15:14,099] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[0],"2":[0],"0":[0]}} for path /brokers/topics/t1 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2015-07-22 14:15:14,103] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-07-22 14:15:14,106] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2015-07-22 14:15:14,109] DEBUG [DeleteTopicsListener on 0]: Delete topics listener fired for topics  to be deleted (kafka.controller.PartitionStateMachine$DeleteTopicsListener)
[2015-07-22 14:15:18,900] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:15:18,901] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:15:18,901] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:15:18,901] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:20:18,897] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:20:18,898] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:20:18,898] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:20:18,898] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:25:18,891] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:25:18,892] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:25:18,892] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:25:18,892] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:30:18,884] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:30:18,884] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:30:18,884] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:30:18,884] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:35:18,876] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:35:18,876] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:35:18,876] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:35:18,877] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:40:18,873] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:40:18,874] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:40:18,874] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:40:18,874] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:45:18,866] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:45:18,867] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:45:18,867] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:45:18,867] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:50:18,859] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:50:18,860] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:50:18,860] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:50:18,860] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2015-07-22 14:55:18,857] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2015-07-22 14:55:18,858] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([t2,1] -> List(0), [t1,2] -> List(0), [t3,1] -> List(0), [t1,0] -> List(0), [t2,0] -> List(0), [t2,2] -> List(0), [t1,1] -> List(0), [t3,2] -> List(0), [t3,0] -> List(0))) (kafka.controller.KafkaController)
[2015-07-22 14:55:18,858] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2015-07-22 14:55:18,858] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
